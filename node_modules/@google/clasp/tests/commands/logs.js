"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
var chai_1 = require("chai");
var mocha_1 = require("mocha");
var utils_1 = require("../../src/utils");
var constants_1 = require("../constants");
var functions_1 = require("../functions");
mocha_1.describe('Test clasp logs setup', function () {
    before(functions_1.setupWithoutGCPProject);
    mocha_1.it('should prompt for logs setup', function () {
        var result = child_process_1.spawnSync(constants_1.CLASP, ['logs'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.contain("" + utils_1.LOG.ASK_PROJECT_ID);
        chai_1.expect(result.status).to.equal(0);
    });
    mocha_1.it('should prompt for logs setup', function () {
        var result = child_process_1.spawnSync(constants_1.CLASP, ['logs', '--setup'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.contain("" + utils_1.LOG.ASK_PROJECT_ID);
        chai_1.expect(result.status).to.equal(0);
    });
    after(functions_1.cleanup);
});
mocha_1.describe('Test clasp logs function', function () {
    before(functions_1.setup);
    mocha_1.it('should get some logs', function () {
        var result = child_process_1.spawnSync(constants_1.CLASP, ['logs'], { encoding: 'utf8' });
        // Example log line:
        // tslint:disable-next-line:max-line-length
        // NOTICE               2019-02-26T05:10:20.658Z google.api.serviceusage.v1.ServiceUsage.EnableService Setting up StackDriver Logging.
        // ... we'll just expect there to be *some* stdout.
        chai_1.expect(result.stdout).lengthOf.greaterThan(10);
        chai_1.expect(result.status).to.equal(0);
    });
    after(functions_1.cleanup);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxvZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQ0FBMEM7QUFDMUMsNkJBQThCO0FBQzlCLCtCQUFxQztBQUNyQyx5Q0FBc0M7QUFDdEMsMENBQXFDO0FBQ3JDLDBDQUlzQjtBQUV0QixnQkFBUSxDQUFDLHVCQUF1QixFQUFFO0lBQ2hDLE1BQU0sQ0FBQyxrQ0FBc0IsQ0FBQyxDQUFDO0lBQy9CLFVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtRQUNqQyxJQUFNLE1BQU0sR0FBRyx5QkFBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3RDLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBRyxXQUFHLENBQUMsY0FBZ0IsQ0FBQyxDQUFDO1FBQzFELGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDLENBQUMsQ0FBQztJQUNILFVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtRQUNqQyxJQUFNLE1BQU0sR0FBRyx5QkFBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxDQUNqRCxDQUFDO1FBQ0YsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUcsV0FBRyxDQUFDLGNBQWdCLENBQUMsQ0FBQztRQUMxRCxhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQyxDQUFDLENBQUM7SUFDSCxLQUFLLENBQUMsbUJBQU8sQ0FBQyxDQUFDO0FBQ2pCLENBQUMsQ0FBQyxDQUFDO0FBRUgsZ0JBQVEsQ0FBQywwQkFBMEIsRUFBRTtJQUNuQyxNQUFNLENBQUMsaUJBQUssQ0FBQyxDQUFDO0lBQ2QsVUFBRSxDQUFDLHNCQUFzQixFQUFFO1FBQ3pCLElBQU0sTUFBTSxHQUFHLHlCQUFTLENBQ3RCLGlCQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FDdEMsQ0FBQztRQUNGLG9CQUFvQjtRQUNwQiwyQ0FBMkM7UUFDM0Msc0lBQXNJO1FBQ3RJLG1EQUFtRDtRQUNuRCxhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDL0MsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0gsS0FBSyxDQUFDLG1CQUFPLENBQUMsQ0FBQztBQUNqQixDQUFDLENBQUMsQ0FBQyJ9