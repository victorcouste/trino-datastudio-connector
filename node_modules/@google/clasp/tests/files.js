"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var mocha_1 = require("mocha");
var chai_1 = require("chai");
var files_1 = require("../src/files");
var path_1 = __importDefault(require("path"));
mocha_1.describe('Test files isValidFileName function', function () {
    var validFileName = 'testFile';
    var validJSONFileName = 'appsscript.json';
    var invalidNodeModulesFileName = 'node_modules/@types';
    var invalidFileNameInIgnoreMatches = 'ignoredFile';
    var validJSONFileType = 'JSON';
    var validJSFileType = 'SERVER_JS';
    var validHTMLFileType = 'HTML';
    var invalidFileType = 'JAVA';
    var validRootDir = './';
    var validNormalizedName = path_1.default.join(validRootDir, validJSONFileName);
    var validIgnoreMatches = ['ignoredFile', 'anotherFile'];
    // Disable a couple of linting rules just for these tests
    // tslint:disable:max-line-length
    // tslint:disable:no-unused-expression
    mocha_1.it('should return true for valid combinations of input', function () {
        chai_1.expect(files_1.isValidFileName(validFileName, validJSFileType, validRootDir, validNormalizedName, validIgnoreMatches)).to.be.true;
        chai_1.expect(files_1.isValidFileName(validFileName, validHTMLFileType, validRootDir, validNormalizedName, validIgnoreMatches)).to.be.true;
        chai_1.expect(files_1.isValidFileName(validJSONFileName, validJSONFileType, validRootDir, validNormalizedName, validIgnoreMatches)).to.be.true;
    });
    mocha_1.it('should return false for invalid combinations of input', function () {
        chai_1.expect(files_1.isValidFileName(invalidNodeModulesFileName, validJSFileType, validRootDir, validNormalizedName, validIgnoreMatches)).to.be.false;
        chai_1.expect(files_1.isValidFileName(invalidFileNameInIgnoreMatches, validJSFileType, validRootDir, validNormalizedName, validIgnoreMatches)).to.be.false;
        chai_1.expect(files_1.isValidFileName(validFileName, invalidFileType, validRootDir, validNormalizedName, validIgnoreMatches)).to.be.false;
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJmaWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLCtCQUFxQztBQUVyQyw2QkFBOEI7QUFDOUIsc0NBRXNCO0FBQ3RCLDhDQUF3QjtBQUV4QixnQkFBUSxDQUFDLHFDQUFxQyxFQUFFO0lBQzlDLElBQU0sYUFBYSxHQUFHLFVBQVUsQ0FBQztJQUNqQyxJQUFNLGlCQUFpQixHQUFHLGlCQUFpQixDQUFDO0lBQzVDLElBQU0sMEJBQTBCLEdBQUcscUJBQXFCLENBQUM7SUFDekQsSUFBTSw4QkFBOEIsR0FBRyxhQUFhLENBQUM7SUFDckQsSUFBTSxpQkFBaUIsR0FBRyxNQUFNLENBQUM7SUFDakMsSUFBTSxlQUFlLEdBQUcsV0FBVyxDQUFDO0lBQ3BDLElBQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDO0lBQ2pDLElBQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQztJQUMvQixJQUFNLFlBQVksR0FBRyxJQUFJLENBQUM7SUFDMUIsSUFBTSxtQkFBbUIsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3ZFLElBQU0sa0JBQWtCLEdBQUcsQ0FBQyxhQUFhLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFFMUQseURBQXlEO0lBQ3pELGlDQUFpQztJQUNqQyxzQ0FBc0M7SUFDdEMsVUFBRSxDQUFDLG9EQUFvRCxFQUFFO1FBQ3ZELGFBQU0sQ0FBQyx1QkFBZSxDQUFDLGFBQWEsRUFBRSxlQUFlLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztRQUMxSCxhQUFNLENBQUMsdUJBQWUsQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztRQUM1SCxhQUFNLENBQUMsdUJBQWUsQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO0lBQ2xJLENBQUMsQ0FBQyxDQUFDO0lBQ0gsVUFBRSxDQUFDLHVEQUF1RCxFQUFFO1FBQzFELGFBQU0sQ0FBQyx1QkFBZSxDQUFDLDBCQUEwQixFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1FBQ3hJLGFBQU0sQ0FBQyx1QkFBZSxDQUFDLDhCQUE4QixFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1FBQzVJLGFBQU0sQ0FBQyx1QkFBZSxDQUFDLGFBQWEsRUFBRSxlQUFlLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztJQUM3SCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIn0=