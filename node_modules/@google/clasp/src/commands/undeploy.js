"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var auth_1 = require("../auth");
var utils_1 = require("../utils");
/**
 * Removes a deployment from the Apps Script project.
 * @param deploymentId {string} The deployment's ID
 */
exports.default = (function (deploymentId, cmd) { return __awaiter(void 0, void 0, void 0, function () {
    var scriptId, deploymentsList, deployments, _i, deployments_1, deployment, id, result, deploymentsList, deployments, response;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, utils_1.checkIfOnline()];
            case 1:
                _a.sent();
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                _a.sent();
                return [4 /*yield*/, utils_1.getProjectSettings()];
            case 3:
                scriptId = (_a.sent()).scriptId;
                if (!scriptId)
                    return [2 /*return*/];
                if (!cmd.all) return [3 /*break*/, 9];
                return [4 /*yield*/, auth_1.script.projects.deployments.list({
                        scriptId: scriptId,
                    })];
            case 4:
                deploymentsList = _a.sent();
                if (deploymentsList.status !== 200)
                    utils_1.logError(deploymentsList.statusText);
                deployments = deploymentsList.data.deployments || [];
                if (!deployments.length)
                    utils_1.logError(null, utils_1.ERROR.SCRIPT_ID_INCORRECT(scriptId));
                deployments.shift(); // @HEAD (Read-only deployments) may not be deleted.
                _i = 0, deployments_1 = deployments;
                _a.label = 5;
            case 5:
                if (!(_i < deployments_1.length)) return [3 /*break*/, 8];
                deployment = deployments_1[_i];
                id = deployment.deploymentId || '';
                utils_1.spinner.setSpinnerTitle(utils_1.LOG.UNDEPLOYMENT_START(id)).start();
                return [4 /*yield*/, auth_1.script.projects.deployments.delete({
                        scriptId: scriptId,
                        deploymentId: id,
                    })];
            case 6:
                result = _a.sent();
                utils_1.spinner.stop(true);
                if (result.status !== 200)
                    utils_1.logError(null, utils_1.ERROR.READ_ONLY_DELETE);
                console.log(utils_1.LOG.UNDEPLOYMENT_FINISH(id));
                _a.label = 7;
            case 7:
                _i++;
                return [3 /*break*/, 5];
            case 8:
                console.log(utils_1.LOG.UNDEPLOYMENT_ALL_FINISH);
                return [2 /*return*/];
            case 9:
                if (!!deploymentId) return [3 /*break*/, 11];
                return [4 /*yield*/, auth_1.script.projects.deployments.list({
                        scriptId: scriptId,
                    })];
            case 10:
                deploymentsList = _a.sent();
                if (deploymentsList.status !== 200)
                    utils_1.logError(deploymentsList.statusText);
                deployments = deploymentsList.data.deployments || [];
                if (!deployments.length)
                    utils_1.logError(null, utils_1.ERROR.SCRIPT_ID_INCORRECT(scriptId));
                // @HEAD (Read-only deployments) may not be deleted.
                if (deployments.length <= 1)
                    utils_1.logError(null, utils_1.ERROR.SCRIPT_ID_INCORRECT(scriptId));
                deploymentId = deployments[deployments.length - 1].deploymentId || '';
                _a.label = 11;
            case 11:
                utils_1.spinner.setSpinnerTitle(utils_1.LOG.UNDEPLOYMENT_START(deploymentId)).start();
                return [4 /*yield*/, auth_1.script.projects.deployments.delete({
                        scriptId: scriptId,
                        deploymentId: deploymentId,
                    })];
            case 12:
                response = _a.sent();
                utils_1.spinner.stop(true);
                if (response.status === 200) {
                    console.log(utils_1.LOG.UNDEPLOYMENT_FINISH(deploymentId));
                }
                else {
                    utils_1.logError(null, utils_1.ERROR.READ_ONLY_DELETE);
                }
                return [2 /*return*/];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5kZXBsb3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ1bmRlcGxveS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGdDQUFxRDtBQUNyRCxrQ0FBNEY7QUFFNUY7OztHQUdHO0FBQ0gsbUJBQWUsVUFBTyxZQUFvQixFQUFFLEdBQXFCOzs7O29CQUMvRCxxQkFBTSxxQkFBYSxFQUFFLEVBQUE7O2dCQUFyQixTQUFxQixDQUFDO2dCQUN0QixxQkFBTSx5QkFBa0IsRUFBRSxFQUFBOztnQkFBMUIsU0FBMEIsQ0FBQztnQkFDTixxQkFBTSwwQkFBa0IsRUFBRSxFQUFBOztnQkFBdkMsUUFBUSxHQUFLLENBQUEsU0FBMEIsQ0FBQSxTQUEvQjtnQkFDaEIsSUFBSSxDQUFDLFFBQVE7b0JBQUUsc0JBQU87cUJBQ2xCLEdBQUcsQ0FBQyxHQUFHLEVBQVAsd0JBQU87Z0JBQ2UscUJBQU0sYUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO3dCQUM3RCxRQUFRLFVBQUE7cUJBQ1QsQ0FBQyxFQUFBOztnQkFGSSxlQUFlLEdBQUcsU0FFdEI7Z0JBQ0YsSUFBSSxlQUFlLENBQUMsTUFBTSxLQUFLLEdBQUc7b0JBQUUsZ0JBQVEsQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ25FLFdBQVcsR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUM7Z0JBQzNELElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTTtvQkFBRSxnQkFBUSxDQUFDLElBQUksRUFBRSxhQUFLLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDN0UsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsb0RBQW9EO3NCQUNyQyxFQUFYLDJCQUFXOzs7cUJBQVgsQ0FBQSx5QkFBVyxDQUFBO2dCQUF6QixVQUFVO2dCQUNiLEVBQUUsR0FB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