"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var auth_1 = require("../auth");
var apis_1 = require("../apis");
var urls_1 = require("../urls");
var apiutils_1 = require("../apiutils");
var open_1 = __importDefault(require("open"));
/**
 * Acts as a router to apis subcommands
 * Calls functions for list, enable, or disable
 * Otherwise returns an error of command not supported
 */
exports.default = (function (options) { return __awaiter(void 0, void 0, void 0, function () {
    var subcommand, serviceName, apisUrl, _a, _b, command;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0: return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 1:
                _c.sent();
                subcommand = process.argv[3];
                serviceName = process.argv[4];
                if (!options.open) return [3 /*break*/, 3];
                _b = (_a = urls_1.URL).APIS;
                return [4 /*yield*/, utils_1.getProjectId()];
            case 2:
                apisUrl = _b.apply(_a, [_c.sent()]);
                console.log(apisUrl);
                return [2 /*return*/, open_1.default(apisUrl, { wait: false })];
            case 3:
                command = {
                    enable: function () { return __awaiter(void 0, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            apiutils_1.enableOrDisableAPI(serviceName, true);
                            return [2 /*return*/];
                        });
                    }); },
                    disable: function () { return __awaiter(void 0, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            apiutils_1.enableOrDisableAPI(serviceName, false);
                            return [2 /*return*/];
                        });
                    }); },
                    list: function () { return __awaiter(void 0, void 0, void 0, function () {
                        var projectId, MAX_PAGE_SIZE, list, serviceList, enabledAPIs, _i, enabledAPIs_1, enabledAPI, name, data, services, PUBLIC_ADVANCED_SERVICE_IDS, publicServices, _loop_1, _a, PUBLIC_ADVANCED_SERVICE_IDS_1, publicServiceId, _b, publicServices_1, api;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0: return [4 /*yield*/, utils_1.checkIfOnline()];
                                case 1:
                                    _c.sent();
                                    /**
                                     * List currently enabled APIs.
                                     */
                                    console.log('\n# Currently enabled APIs:');
                                    return [4 /*yield*/, utils_1.getProjectId()];
                                case 2:
                                    projectId = _c.sent();
                                    MAX_PAGE_SIZE = 200;
                                    return [4 /*yield*/, auth_1.serviceUsage.services.list({
                                            parent: "projects/" + projectId,
                                            filter: 'state:ENABLED',
                                            pageSize: MAX_PAGE_SIZE,
                                        })];
                                case 3:
                                    list = _c.sent();
                                    serviceList = list.data.services || [];
                                    if (serviceList.length >= MAX_PAGE_SIZE) {
                                        console.log('There is a bug with pagination. Please file an issue on Github.');
                                    }
                                    enabledAPIs = serviceList.filter(function (service) {
                                        return service.state === 'ENABLED';
                                    });
                                    for (_i = 0, enabledAPIs_1 = enabledAPIs; _i < enabledAPIs_1.length; _i++) {
                                        enabledAPI = enabledAPIs_1[_i];
                                        if (enabledAPI.config && enabledAPI.config.documentation) {
                                            name = enabledAPI.config.name || 'Unknown name.';
                                            console.log(name.substr(0, name.indexOf('.')) + " - " + enabledAPI.config.documentation.summary);
                                        }
                                    }
                                    /**
                                     * List available APIs.
                                     */
                                    console.log('\n# List of available APIs:');
                                    return [4 /*yield*/, auth_1.discovery.apis.list({
                                            preferred: true,
                                        })];
                                case 4:
                                    data = (_c.sent()).data;
                                    services = data.items || [];
                                    PUBLIC_ADVANCED_SERVICE_IDS = apis_1.PUBLIC_ADVANCED_SERVICES.map(function (advancedService) { return advancedService.serviceId; });
                                    publicServices = [];
                                    _loop_1 = function (publicServiceId) {
                                        var service = services.find(function (s) { return s.name === publicServiceId; });
                                        // for some reason 'youtubePartner' is not in the api list.
                                        if (service && service.id && service.description) {
                                            publicServices.push(service);
                                        }
                                    };
                                    for (_a = 0, PUBLIC_ADVANCED_SERVICE_IDS_1 = PUBLIC_ADVANCED_SERVICE_IDS; _a < PUBLIC_ADVANCED_SERVICE_IDS_1.length; _a++) {
                                        publicServiceId = PUBLIC_ADVANCED_SERVICE_IDS_1[_a];
                                        _loop_1(publicServiceId);
                                    }
                                    // Sort the services based on id
                                    // tslint:disable-next-line:no-any
                                    publicServices.sort(function (a, b) {
                                        if (a.id < b.id)
                                            return -1;
                                        if (a.id > b.id)
                                            return 1;
                                        return 0;
                                    });
                                    // Format the list
                                    for (_b = 0, publicServices_1 = publicServices; _b < publicServices_1.length; _b++) {
                                        api = publicServices_1[_b];
                                        console.log(api.name.padEnd(25) + " - " + api.description.padEnd(60));
                                    }
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                    undefined: function () {
                        command.list();
                        console.log("# Try these commands:\n- clasp apis list\n- clasp apis enable slides\n- clasp apis disable slides");
                    },
                };
                if (command[subcommand]) {
                    command[subcommand]();
                }
                else {
                    utils_1.logError(null, utils_1.ERROR.COMMAND_DNE('apis ' + subcommand));
                }
                return [2 /*return*/];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFwaXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxrQ0FBd0U7QUFDeEUsZ0NBQXNFO0FBR3RFLGdDQUFtRDtBQUNuRCxnQ0FBOEI7QUFDOUIsd0NBQWlEO0FBQ2pELDhDQUF3QjtBQUd4Qjs7OztHQUlHO0FBQ0gsbUJBQWUsVUFBTyxPQUEwQjs7OztvQkFDOUMscUJBQU0seUJBQWtCLEVBQUUsRUFBQTs7Z0JBQTFCLFNBQTBCLENBQUM7Z0JBQ3JCLFVBQVUsR0FBVyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNyQyxXQUFXLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztxQkFHaEMsT0FBTyxDQUFDLElBQUksRUFBWix3QkFBWTtnQkFDRSxLQUFBLENBQUEsS0FBQSxVQUFHLENBQUEsQ0FBQyxJQUFJLENBQUE7Z0JBQUMscUJBQU0sb0JBQVksRUFBRSxFQUFBOztnQkFBdkMsT0FBTyxHQUFHLGNBQVMsU0FBb0IsRUFBQztnQkFDOUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDckIsc0JBQU8sY0FBSSxDQUFDLE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDOztnQkFJbEMsT0FBTyxHQUFnQztvQkFDM0MsTUFBTSxFQUFFOzs0QkFDTiw2QkFBa0IsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7Ozt5QkFDdkM7b0JBQ0QsT0FBTyxFQUFFOzs0QkFDUCw2QkFBa0IsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7Ozt5QkFDeEM7b0JBQ0QsSUFBSSxFQUFFOzs7O3dDQUNKLHFCQUFNLHFCQUFhLEVBQUUsRUFBQTs7b0NBQXJCLFNBQXFCLENBQUM7b0NBQ3RCOzt1Q0FFRztvQ0FDSCxPQUFP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