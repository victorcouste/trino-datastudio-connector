"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var open_1 = __importDefault(require("open"));
var auth_1 = require("../auth");
var inquirer_1 = require("../inquirer");
var urls_1 = require("../urls");
var utils_1 = require("../utils");
var ellipsize = require('ellipsize');
/**
 * Opens an Apps Script project's script.google.com editor.
 * @param scriptId {string} The Apps Script project to open.
 * @param cmd.webapp {boolean} If true, the command will open the webapps URL.
 * @param cmd.creds {boolean} If true, the command will open the credentials URL.
 */
exports.default = (function (scriptId, cmd) { return __awaiter(void 0, void 0, void 0, function () {
    var projectSettings, projectId, deploymentsList, deployments, choices, answers, deployment, target;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, utils_1.getProjectSettings()];
            case 1:
                projectSettings = _a.sent();
                if (!scriptId)
                    scriptId = projectSettings.scriptId;
                if (scriptId.length < 30)
                    utils_1.logError(null, utils_1.ERROR.SCRIPT_ID_INCORRECT(scriptId));
                // We've specified to open creds.
                if (cmd.creds) {
                    projectId = projectSettings.projectId;
                    if (projectId) {
                        console.log(utils_1.LOG.OPEN_CREDS(projectId));
                        return [2 /*return*/, open_1.default(urls_1.URL.CREDS(projectId), { wait: false })];
                    }
                    utils_1.logError(null, utils_1.ERROR.NO_GCLOUD_PROJECT);
                }
                // If we're not a web app, open the script URL.
                if (!cmd.webapp) {
                    console.log(utils_1.LOG.OPEN_PROJECT(scriptId));
                    return [2 /*return*/, open_1.default(urls_1.URL.SCRIPT(scriptId), { wait: false })];
                }
                // Web app: Otherwise, open the latest deployment.
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                // Web app: Otherwise, open the latest deployment.
                _a.sent();
                return [4 /*yield*/, auth_1.script.projects.deployments.list({ scriptId: scriptId })];
            case 3:
                deploymentsList = _a.sent();
                if (deploymentsList.status !== 200)
                    utils_1.logError(deploymentsList.statusText);
                deployments = deploymentsList.data.deployments || [];
                if (deployments.length === 0)
                    utils_1.logError(null, utils_1.ERROR.SCRIPT_ID_INCORRECT(scriptId));
                choices = deployments
                    .slice()
                    .sort(function (d1, d2) {
                    if (d1.updateTime && d2.updateTime) {
                        return d1.updateTime.localeCompare(d2.updateTime);
                    }
                    return 0; // should never happen
                })
                    .map(function (e) {
                    var DESC_PAD_SIZE = 30;
                    var config = e.deploymentConfig;
                    var version = config && config.versionNumber;
                    return {
                        name: ellipsize(config && config.description, DESC_PAD_SIZE).padEnd(DESC_PAD_SIZE) +
                            ("@" + (typeof version === 'number' ? "" + version : 'HEAD').padEnd(4) + " - " + e.deploymentId),
                        value: e,
                    };
                });
                return [4 /*yield*/, inquirer_1.deploymentIdPrompt(choices)];
            case 4:
                answers = _a.sent();
                return [4 /*yield*/, auth_1.script.projects.deployments.get({
                        scriptId: scriptId,
                        deploymentId: answers.deployment.deploymentId,
                    })];
            case 5:
                deployment = _a.sent();
                console.log(utils_1.LOG.OPEN_WEBAPP(answers.deployment.deploymentId));
                target = utils_1.getWebApplicationURL(deployment.data);
                if (target) {
                    return [2 /*return*/, open_1.default(target, { wait: false })];
                }
                else {
                    utils_1.logError(null, "Could not open deployment: " + deployment);
                }
                return [2 /*return*/];
        }
    });
}); });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlbkNtZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm9wZW5DbWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBd0I7QUFDeEIsZ0NBQXFEO0FBQ3JELHdDQUFpRDtBQUNqRCxnQ0FBOEI7QUFDOUIsa0NBQTBGO0FBTzFGLElBQU0sU0FBUyxHQUFtRSxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFFdkc7Ozs7O0dBS0c7QUFDSCxtQkFBZSxVQUNiLFFBQWdCLEVBQ2hCLEdBR0M7Ozs7b0JBRXVCLHFCQUFNLDBCQUFrQixFQUFFLEVBQUE7O2dCQUE1QyxlQUFlLEdBQUcsU0FBMEI7Z0JBQ2xELElBQUksQ0FBQyxRQUFRO29CQUFFLFFBQVEsR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDO2dCQUNuRCxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsRUFBRTtvQkFBRSxnQkFBUSxDQUFDLElBQUksRUFBRSxhQUFLLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztnQkFDOUUsaUNBQWlDO2dCQUNqQyxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUU7b0JBQ1AsU0FBUyxHQUFHLGVBQWUsQ0FBQyxTQUFTLENBQUM7b0JBQzVDLElBQUksU0FBUyxFQUFFO3dCQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBRyxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO3dCQUN2QyxzQkFBTyxjQUFJLENBQUMsVUFBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO3FCQUNwRDtvQkFDRCxnQkFBUSxDQUFDLElBQUksRUFBRSxhQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztpQkFDekM7Z0JBRUQsK0NBQStDO2dCQUMvQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRTtv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