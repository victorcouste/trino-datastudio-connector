"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __importDefault(require("path"));
var fs_extra_1 = require("fs-extra");
var multimatch_1 = __importDefault(require("multimatch"));
var watch_1 = require("watch");
var auth_1 = require("../auth");
var dotfile_1 = require("../dotfile");
var files_1 = require("../files");
var inquirer_1 = require("../inquirer");
var manifest_1 = require("../manifest");
var utils_1 = require("../utils");
var normalizeNewline = require('normalize-newline');
/**
 * Uploads all files into the script.google.com filesystem.
 * TODO: Only push the specific files that changed (rather than all files).
 * @param cmd.watch {boolean} If true, runs `clasp push` when any local file changes. Exit with ^C.
 */
exports.default = (function (cmd) { return __awaiter(void 0, void 0, void 0, function () {
    var rootDir, patterns_1, _a, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0: return [4 /*yield*/, utils_1.checkIfOnline()];
            case 1:
                _c.sent();
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                _c.sent();
                return [4 /*yield*/, manifest_1.isValidManifest()];
            case 3:
                _c.sent();
                return [4 /*yield*/, utils_1.getProjectSettings()];
            case 4:
                rootDir = (_c.sent()).rootDir;
                if (!cmd.watch) return [3 /*break*/, 6];
                console.log(utils_1.LOG.PUSH_WATCH);
                return [4 /*yield*/, dotfile_1.DOTFILE.IGNORE()];
            case 5:
                patterns_1 = _c.sent();
                /**
                 * @see https://www.npmjs.com/package/watch
                 */
                // TODO check alternative https://github.com/paulmillr/chokidar
                watch_1.watchTree(rootDir || '.', function (f, curr, prev) { return __awaiter(void 0, void 0, void 0, function () {
                    var _a, _b;
                    return __generator(this, function (_c) {
                        switch (_c.label) {
                            case 0:
                                // The first watch doesn't give a string for some reason.
                                if (typeof f === 'string') {
                                    console.log("\n" + utils_1.LOG.PUSH_WATCH_UPDATED(f) + "\n");
                                    if (multimatch_1.default([f], patterns_1, { dot: true }).length) {
                                        // The file matches the ignored files patterns so we do nothing
                                        return [2 /*return*/];
                                    }
                                }
                                _b = !cmd.force;
                                if (!_b) return [3 /*break*/, 2];
                                return [4 /*yield*/, manifestHasChanges()];
                            case 1:
                                _b = (_c.sent());
                                _c.label = 2;
                            case 2:
                                _a = _b;
                                if (!_a) return [3 /*break*/, 4];
                                return [4 /*yield*/, confirmManifestUpdate()];
                            case 3:
                                _a = !(_c.sent());
                                _c.label = 4;
                            case 4:
                                if (_a) {
                                    console.log('Stopping push...');
                                    return [2 /*return*/];
                                }
                                console.log(utils_1.LOG.PUSHING);
                                files_1.pushFiles();
                                return [2 /*return*/];
                        }
                    });
                }); });
                return [3 /*break*/, 11];
            case 6:
                _b = !cmd.force;
                if (!_b) return [3 /*break*/, 8];
                return [4 /*yield*/, manifestHasChanges()];
            case 7:
                _b = (_c.sent());
                _c.label = 8;
            case 8:
                _a = _b;
                if (!_a) return [3 /*break*/, 10];
                return [4 /*yield*/, confirmManifestUpdate()];
            case 9:
                _a = !(_c.sent());
                _c.label = 10;
            case 10:
                if (_a) {
                    console.log('Stopping push...');
                    return [2 /*return*/];
                }
                utils_1.spinner.setSpinnerTitle(utils_1.LOG.PUSHING).start();
                files_1.pushFiles();
                _c.label = 11;
            case 11: return [2 /*return*/];
        }
    });
}); });
/**
 * Confirms that the manifest file has been updated.
 * @returns {Promise<boolean>}
 */
var confirmManifestUpdate = function () { return __awaiter(void 0, void 0, void 0, function () {
    var answers;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, inquirer_1.overwritePrompt()];
            case 1:
                answers = _a.sent();
                return [2 /*return*/, answers.overwrite];
        }
    });
}); };
/**
 * Checks if the manifest has changes.
 * @returns {Promise<boolean>}
 */
var manifestHasChanges = function () { return __awaiter(void 0, void 0, void 0, function () {
    var _a, scriptId, rootDir, localManifestPath, localManifest, remoteFiles, remoteManifest;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, utils_1.getProjectSettings()];
            case 1:
                _a = _b.sent(), scriptId = _a.scriptId, rootDir = _a.rootDir;
                localManifestPath = path_1.default.join(rootDir || dotfile_1.DOT.PROJECT.DIR, utils_1.PROJECT_MANIFEST_FILENAME);
                localManifest = fs_extra_1.readFileSync(localManifestPath, files_1.FS_OPTIONS);
                return [4 /*yield*/, files_1.fetchProject(scriptId, undefined, true)];
            case 2:
                remoteFiles = _b.sent();
                remoteManifest = remoteFiles.find(function (file) { return file.name === utils_1.PROJECT_MANIFEST_BASENAME; });
                if (!remoteManifest)
                    throw Error('remote manifest no found');
                return [2 /*return*/, normalizeNewline(localManifest) !== normalizeNewline(remoteManifest.source)];
        }
    });
}); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInB1c2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBd0I7QUFDeEIscUNBQXdDO0FBQ3hDLDBEQUFvQztBQUNwQywrQkFBa0M7QUFDbEMsZ0NBQTZDO0FBQzdDLHNDQUEwQztBQUMxQyxrQ0FBK0Q7QUFDL0Qsd0NBQThDO0FBQzlDLHdDQUE4QztBQUM5QyxrQ0FPa0I7QUFFbEIsSUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUV0RDs7OztHQUlHO0FBQ0gsbUJBQWUsVUFBTyxHQUF1Qzs7OztvQkFDM0QscUJBQU0scUJBQWEsRUFBRSxFQUFBOztnQkFBckIsU0FBcUIsQ0FBQztnQkFDdEIscUJBQU0seUJBQWtCLEVBQUUsRUFBQTs7Z0JBQTFCLFNBQTBCLENBQUM7Z0JBQzNCLHFCQUFNLDBCQUFlLEVBQUUsRUFBQTs7Z0JBQXZCLFNBQXVCLENBQUM7Z0JBQ0oscUJBQU0sMEJBQWtCLEVBQUUsRUFBQTs7Z0JBQXRDLE9BQU8sR0FBSyxDQUFBLFNBQTBCLENBQUEsUUFBL0I7cUJBRVgsR0FBRyxDQUFDLEtBQUssRUFBVCx3QkFBUztnQkFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDWCxxQkFBTSxpQkFBTyxDQUFDLE1BQU0sRUFBRSxFQUFBOztnQkFBakMsYUFBVyxTQUFzQjtnQkFDdkM7O21CQUVHO2dCQUNILCtEQUErRDtnQkFDL0QsaUJBQVMsQ0FBQyxPQUFPLElBQUksR0FBRyxFQUFFLFVBQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJOzs7OztnQ0FDNUMseURBQXlEO2dDQUN6RCxJQUFJLE9BQU8sQ0FBQyxLQUFLLFFBQVEsRUFBRTtvQ0FDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFLLFdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsT0FBSSxDQUFDLENBQUM7b0NBQ2hELElBQUksb0JBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVEsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRTt3Q0FDbkQsK0RBQStEO3dDQUMvRCxzQkFBTztxQ0FDUjtpQ0FDRjtnQ0FDRyxLQUFBLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQTt5Q0FBVix3QkFBVTtnQ0FBSyxxQkFBTSxrQkFBa0IsRUFBRSxFQUFBOztnQ0FBM0IsS0FBQSxDQUFDLFNBQTBCLENBQUMsQ0FBQTs7O2dDQUExQyxRQUEwQzt5Q0FBMUMsd0JBQTBDO2dDQUFNLHFCQUFNLHFCQUFxQixFQUFFLEVBQUE7O2dDQUEvQixLQUFBLENBQUMsQ0FBQyxTQUE2QixDQUFDLENBQUE7OztnQ0FBbEYsUUFBb0Y7b0NBQ2xGLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztvQ0FDaEMsc0JBQU87aUNBQ1I7Z0NBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7Z0NBQ3pCLGlCQUFTLEVBQUUsQ0FBQzs7OztxQkFDYixDQUFDLENBQUM7OztnQkFFQyxLQUFBLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQTt5QkFBVix3QkFBVTtnQkFBSyxxQkFBTSxrQkFBa0IsRUFBRSxFQUFBOztnQkFBM0IsS0FBQSxDQUFDLFNBQTBCLENBQUMsQ0FBQTs7O2dCQUExQyxRQUEwQzt5QkFBMUMseUJBQTBDO2dCQUFNLHFCQUFNLHFCQUFxQixFQUFFLEVBQUE7O2dCQUEvQixLQUFBLENBQUMsQ0FBQyxTQUE2QixDQUFDLENBQUE7OztnQkFBbEYsUUFBb0Y7b0JBQ2xGLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztvQkFDaEMsc0JBQU87aUJBQ1I7Z0JBQ0QsZUFBTyxDQUFDLGVBQWUsQ0FBQyxXQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQzdDLGlCQUFTLEVBQUUsQ0FBQzs7Ozs7S0FFZixFQUFDO0FBRUY7OztHQUdHO0FBQ0gsSUFBTSxxQkFBcUIsR0FBRzs7OztvQkFDWixxQkFBTSwwQkFBZSxFQUFFLEVBQUE7O2dCQUFqQyxPQUFPLEdBQUcsU0FBdUI7Z0JBQ3ZDLHNCQUFPLE9BQU8sQ0FBQyxTQUFTLEVBQUM7OztLQUMxQixDQUFDO0FBRUY7OztHQUdHO0FBQ0gsSUFBTSxrQkFBa0IsR0FBRzs7OztvQkFDSyxxQkFBTSwwQkFBa0IsRUFBRSxFQUFBOztnQkFBbEQsS0FBd0IsU0FBMEIsRUFBaEQsUUFBUSxjQUFBLEVBQUUsT0FBTyxhQUFBO2dCQUNuQixpQkFBaUIsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxhQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxpQ0FBeUIsQ0FBQyxDQUFDO2dCQUNyRixhQUFhLEdBQUcsdUJBQVksQ0FBQyxpQkFBaUIsRUFBRSxrQkFBVSxDQUFDLENBQUM7Z0JBQzlDLHFCQUFNLG9CQUFZLENBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsRUFBQTs7Z0JBQTNELFdBQVcsR0FBRyxTQUE2QztnQkFDM0QsY0FBYyxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLENBQUMsSUFBSSxLQUFLLGlDQUF5QixFQUF2QyxDQUF1QyxDQUFDLENBQUM7Z0JBQ3pGLElBQUksQ0FBQyxjQUFjO29CQUFFLE1BQU0sS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7Z0JBQzdELHNCQUFPLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsRUFBQzs7O0tBQ3BGLENBQUMifQ==